{"version":3,"sources":["components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["CardList","robots","Error","SearchBox","searchfield","searchChange","className","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","name","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"2OAyBeA,EAtBE,SAAC,GAAa,EAAZC,OAEf,MAAM,IAAIC,MAAM,WCULC,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC/B,OACE,yBAAKC,UAAU,OACb,2BACEA,UAAU,mCACVC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,MCCHK,EARA,SAACC,GACd,OACE,yBAAKC,MAAO,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,UACjEJ,EAAMK,WCkBEC,E,YApBb,WAAYN,GAAQ,IAAD,8BACjB,4CAAMA,KACDO,MAAQ,CACXC,UAAU,GAHK,E,+EAODC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAK1B,OAAIG,KAAKJ,MAAMC,SACN,uDAEFG,KAAKX,MAAMK,a,GAjBKQ,aCmDZC,G,kBA3Cb,aAAc,IAAD,8BACX,+CAaFC,eAAiB,SAACC,GAEhB,EAAKJ,SAAS,CAACnB,YAAYuB,EAAMC,OAAOC,SAdxC,EAAKX,MAAQ,CACXjB,OAAQ,GACRG,YAAa,IAJJ,E,iFAQQ,IAAD,OAClB0B,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACtB,OAAQiC,S,+BAS9B,IAAD,OACAC,EAAiBb,KAAKJ,MAAMjB,OAAOmC,QAAO,SAAAC,GAC/C,OAAOA,EAAMC,KAAKC,cAAcC,SAAS,EAAKtB,MAAMd,YAAYmC,kBAElE,OAAiC,IAA7BjB,KAAKJ,MAAMjB,OAAOwC,OACb,uCAIL,yBAAKnC,UAAU,MACb,wBAAIA,UAAU,MAAd,eACA,kBAAC,EAAD,CAAWD,aAAciB,KAAKI,iBAC9B,kBAAC,EAAD,KACA,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAUzB,OAAQkC,W,GAnCZX,c,MCDlBkB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.447c174d.chunk.js","sourcesContent":["import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n  if (true) {\n    throw new Error('Nooooo')\n  }\n  return (\n          <div>\n          {\n             robots.map((user,i) => {\n              return ( <Card \n              key={robots[i].id} \n              id={robots[i].id} \n              name={robots[i].name} \n              email={ robots[i].email}\n              /> \n              )  \n             })\n           }\n          </div>\n    \n  );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchfield, searchChange}) => {\n  return (\n    <div className='pa2'>\n      <input \n        className='pa3 ba b--green bg-lightest-blue'\n        type=\"search\" \n        placeholder=\"search robots\" \n        onChange={searchChange}\n      />\n    </div>\n  )\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div style={{overflow: 'scroll', border: '5px solid black', height: '800px'}} >\n      {props.children}\n    </div>  \n  )\n}\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    }\n  }\n  \n  componentDidCatch(error, info){\n    this.setState({ hasError: true })\n  }\n  \n  render() {\n    \n    if (this.state.hasError) {\n      return <h1>Ooops. That is not good</h1> \n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\n// import { robots } from './robots';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport'./App.css';\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      robots: [],\n      searchfield: ''\n    }\n  }\n  \n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=> response.json())\n    .then(users => this.setState({robots: users}))\n  }\n  \n  onSearchChange = (event) => {\n    // console.log(event.target.value);\n    this.setState({searchfield:event.target.value})\n   \n  }\n  \n  render() {  \n     const filteredRobots = this.state.robots.filter(robot => {\n      return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    })\n    if (this.state.robots.length === 0){\n      return <h1>Loading</h1>\n    }else{\n      \n      return (\n        <div className='tc'>\n          <h1 className='f1'>RoboFriends</h1>\n          <SearchBox searchChange={this.onSearchChange}/>\n          <Scroll>\n          <ErrorBoundry>\n            <CardList robots={filteredRobots}/>\n          </ErrorBoundry>\n          </Scroll>\n        </div>\n      )\n    }\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\n// import * as serviceWorker from './serviceWorker';\n// import registerServiceWorker from './registerServiceWorker';\n//originally <App> \nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n// serviceWorker.unregister();\n// registerServiceWorker();"],"sourceRoot":""}